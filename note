<!-- 


 <!DOCTYPE html>
<html>
<head>
  <title>Text to Speech</title>
  <link href="https://fonts.googleapis.com/css2?family=Pacifico&display=swap" rel="stylesheet">
</head>
<body‚Äç >


<style>

#mainDiv{
margin: 0 auto;
text-align: center;
background-color: antiquewhite;
width: 60%;
padding-top: 20px;
height: 200px; 
border-radius: 10px;
}

#text{
 border: none;
 outline: none;
 padding-top: 10px;
 padding-bottom: 10px ;
  padding-left: 10px;
  padding-right: 10px;
    border-radius: 3px;
    transition: ease-in-out 1s; 
    font-family: 'Pacifico', cursive;
}
#text:hover{
background-color: rgb(146, 142, 150);
}
#voice{
   border: none;
 outline: none;
 padding-top: 10px;
 padding-bottom: 10px ;
  padding-left: 10px;
  padding-right: 10px;
    border-radius: 3px;
    transition: ease-in-out 1s;
  }
#voice:hover{
background-color: rgb(115, 112, 119);


}


</style>
  <div id="mainDiv">
    <h2>‡¶á‡¶Æ‡¶® ‡¶≠‡ßü‡ßá‡¶∏ ‡¶π‡ßã‡¶≤‡ßç‡¶°‡¶æ‡¶∞</h2>
  <input  id="text" placeholder="Type Something..." />
  <button  onclick="speakText()" id="voice" >üîä Speak</button>
  </div>
  

  <script>
    function speakText() {
      let text = document.getElementById("text").value;
      let utterance = new SpeechSynthesisUtterance(text);
      speechSynthesis.speak(utterance);
    }
  </script>
</body>
</html> 





<!-- asol -->


<!-- <!DOCTYPE html>
<html>
<head>
  <title>Translator + Voice Selector + Voice Play</title>

</head>
<body>

    <style>
    body { font-family: Arial, sans-serif; text-align: center; margin: 40px; }
    textarea { width: 60%; height: 100px; }
    select, button { padding: 10px; margin: 10px; font-size: 16px; }
    #translatedText { border: 1px solid #ccc; padding: 10px; min-height: 60px; width: 60%; margin: 20px auto; white-space: pre-wrap; }
    label { font-weight: bold; };

    
  </style>

  <!-- main div -->

  <div class="main">


    
  <h2>Translator + Voice Selector + Voice Play</h2>

  <label for="textInput">Enter English Text:</label><br>
  <textarea id="textInput" placeholder="Type text here..."></textarea><br>

  <label for="langSelect">Select Target Language:</label><br>
  <select id="langSelect">
    <option value="en">English</option>
    <option value="bn">Bengali</option>
    <option value="hi">Hindi</option>
    <option value="fr">French</option>
    <option value="ar">Arabic</option>
    <option value="es">Spanish</option>
    <option value="de">German</option>
    <option value="ja">Japanese</option>
    <option value="ru">Russian</option>
    <option value="ko">Korean</option>
  </select><br>

  <label for="voiceSelect">Select Voice:</label><br>
  <select id="voiceSelect"></select><br>

  <button onclick="translateText()">Translate</button>
  <button onclick="playVoiceTranslated()">Play Translated Voice</button>
  <button onclick="playVoiceOriginal()">Play Original Text Voice</button>

  <div id="translatedText" aria-live="polite" aria-atomic="true"></div>
  </div>


<script>
  let translated = '';
  let voices = [];
  const voiceSelect = document.getElementById('voiceSelect');

  function populateVoices() {
    voices = speechSynthesis.getVoices();
    if (!voices.length) {
      alert('No voices available. Please try again or change your browser.');
      return;
    }
    voiceSelect.innerHTML = '';
    voices.forEach((voice, index) => {
      const option = document.createElement('option');
      option.value = index;
      option.textContent = `${voice.name} (${voice.lang})${voice.default ? ' [default]' : ''}`;
      voiceSelect.appendChild(option);
    });
  }

  speechSynthesis.onvoiceschanged = populateVoices;
  populateVoices();

  async function translateText() {
    const text = document.getElementById('textInput').value.trim();
    const targetLang = document.getElementById('langSelect').value;
    if (!text) {
      alert('Please enter some text!');
      return;
    }
    if (targetLang === 'en') {
      translated = text;
      document.getElementById('translatedText').innerText = translated;
      return;
    }
    const url = `https://translate.googleapis.com/translate_a/single?client=gtx&sl=en&tl=${targetLang}&dt=t&q=${encodeURIComponent(text)}`;
    try {
      const res = await fetch(url);
      if (!res.ok) {
        alert('Translation failed.');
        return;
      }
      const data = await res.json();
      translated = data[0].map(item => item[0]).join('');
      document.getElementById('translatedText').innerText = translated;
    } catch (err) {
      alert('Error: ' + err.message);
    }
  }

  function playVoiceTranslated() {
    if (!translated) {
      alert('Please translate text first!');
      return;
    }

    const targetLang = document.getElementById('langSelect').value;
    const selectedIndex = voiceSelect.value;
    let selectedVoice = voices[selectedIndex];

    if (!selectedVoice.lang.toLowerCase().startsWith(targetLang.toLowerCase())) {
      const altVoice = voices.find(v => v.lang.toLowerCase().startsWith(targetLang.toLowerCase()));
      if (altVoice) {
        selectedVoice = altVoice;
      }
    }

    const utterance = new SpeechSynthesisUtterance(translated);
    utterance.voice = selectedVoice;
    utterance.lang = selectedVoice.lang || targetLang;
    speechSynthesis.speak(utterance);
  }

  function playVoiceOriginal() {
    const text = document.getElementById('textInput').value.trim();
    if (!text) {
      alert('Please enter some text!');
      return;
    }
    const selectedIndex = voiceSelect.value;
    let selectedVoice = voices[selectedIndex];
    if (!selectedVoice.lang.toLowerCase().startsWith('en')) {
      const altVoice = voices.find(v => v.lang.toLowerCase().startsWith('en'));
      if (altVoice) {
        selectedVoice = altVoice;
      }
    }
    const utterance = new SpeechSynthesisUtterance(text);
    utterance.voice = selectedVoice;
    utterance.lang = selectedVoice.lang || 'en-US';
    speechSynthesis.speak(utterance);
  }
</script>

</body>
</html> 

